# -*- coding: utf-8 -*-
"""370_Business Analytics_Project 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I4c0qKTUEKzypmJn5CtJQ6oAJDKjSiu2
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import statsmodels.formula.api as smf
from numpy import median

#goal: find oppurtunities to implenet incentive programs to increase the number of registered riders

#read in the dataset and print the header
data = pd.read_csv("/content/dc_bike_share.csv")
print(data.head())
print()

#print the descriptive statistics
print(data.describe())
print()

#a histogram showing the distribution of registered bike users
plt.hist(data['registered'], bins= 10, rwidth=.9)
plt.title('Distribution of Registered Bike Users')
plt.ylabel('Frequency')
plt.xlabel('Number of Registered Users')
plt.show()
print()

#a bar plot showing the median number of registered riders by day of the week
p = sns.barplot(data = data, x = 'weekday', y = 'registered', estimator = median)
p.set(title = 'Median Number of Registered Riders by Day')
p.set(xlabel= 'Day')
p.set (ylabel= 'Number of Registered Riders')
plt.show()
print()

#a bar plot showing the median number of casual riders by day of the week
p = sns.barplot(data = data, x = 'weekday', y = 'casual', estimator = median)
p.set(title = 'Median Number of Casual Riders by Day')
p.set(xlabel= 'Day')
p.set (ylabel= 'Number of Casual Riders')
plt.show()
print()

# a bar plot showing the median number of registered riders by month
p = sns.barplot(data = data, x = 'mnth', y = 'registered', estimator = median)
p.set(title = 'Median Number of Registered Riders by Month')
p.set(xlabel= 'Month')
p.set (ylabel= 'Number of Registered Riders')
plt.show()
print()

# a bar plot showing the median number of casual riders by month
p = sns.barplot(data = data, x = 'mnth', y = 'casual', estimator = median)
p.set(title = 'Median Number of Casual Riders by Month')
p.set(xlabel= 'Month')
p.set (ylabel= 'Number of Casual Riders')
plt.show()
print()

#a scatter plot showing the relationship between windspeed and registered riders
p = sns.scatterplot(data = data, x = 'windspeed', y = 'registered')
p.set(title = 'Relationship Between Windspeed and Number of Registered Riders for March 2011')
p.set(xlabel= 'Windspeed')
p.set(ylabel= 'Number of Registered Riders')
plt.show()
print()

#a scatter plot showing the relationship between humidity and registered riders
p = sns.scatterplot(data = data, x = 'temp', y = 'registered')
p.set(title = 'Relationship Between Temperature and Number of Registered Riders for March 2011')
p.set(xlabel= 'Temperature')
p.set(ylabel= 'Number of Registered Riders')
plt.show()
print()